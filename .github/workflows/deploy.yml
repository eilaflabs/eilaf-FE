# ---------------- Developed by M Adnan Ajmal - Next.js CD ---------------- #
# This workflow is a Continuous Deployment (CD) pipeline for deploying a Next.js application
# to a remote Ubuntu server.
#
# 1. The workflow runs on a push to the main branch and can be manually triggered with inputs to specify the target environment.
#
# 2. It requires secrets and environment variables to be set up in your repository for the server, user, SSH keys, and NGINX config.

name: 'Next.js CD'

env:
  APP_NAME: ${{ vars.APP_NAME }}
  COMPONENT_NAME: ${{ vars.COMPONENT_NAME }}
  RELEASE_PATH: /root/${{ vars.APP_NAME }}/${{ github.event_name == 'push' && 'dev' || github.event.inputs.environment }}/${{ vars.COMPONENT_NAME }}
  NODE_ENV: ${{ github.event_name == 'push' && 'dev' || github.event.inputs.environment }}

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment (dev, prod)'
        type: choice
        options:
          - dev
          - prod
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository.
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Transfer the built files to the remote server.
      # Assumes the build is done in your local/dev environment.
      - name: Transfer files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets[format('{0}_SERVER', env.NODE_ENV)] }}
          username: ${{ secrets[format('{0}_USER', env.NODE_ENV)] }}
          key: ${{ secrets[format('{0}_KEY', env.NODE_ENV)] }}
          rm: true
          source: ".next,public,package.json,yarn.lock"
          target: ${{ env.RELEASE_PATH }}

      # Step 3: Deploy the application and restart services.
      - name: Deploy and restart services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets[format('{0}_SERVER', env.NODE_ENV)] }}
          username: ${{ secrets[format('{0}_USER', env.NODE_ENV)] }}
          key: ${{ secrets[format('{0}_KEY', env.NODE_ENV)] }}
          script: |
            set -e  # Exit immediately if a command exits with a non-zero status.

            # Change to the release directory
            cd ${{ env.RELEASE_PATH }}

            # Install production dependencies
            yarn install --production

            # Copy the Nginx configuration directly from the repository environment variable
            echo '${{ secrets[format('{0}_NGINX', env.NODE_ENV)] }}' > ${{ env.RELEASE_PATH }}/.next/nginx.conf || exit 1

            # Check Nginx configuration syntax
            sudo nginx -t || exit 1
            
            # Restart Nginx service
            sudo systemctl restart nginx || exit 1
            
            # Restart the PM2 application
            pm2 restart ${{ env.APP_NAME }}-${{ env.NODE_ENV }} || pm2 start yarn --name "${{ env.APP_NAME }}-${{ env.NODE_ENV }}" -- start
