name: "Next.js CD"

env:
  APP_NAME: ${{ vars.APP_NAME }}
  COMPONENT_NAME: ${{ vars.COMPONENT_NAME }}
  RELEASE_PATH: /root/${{ vars.APP_NAME }}/${{ github.event_name == 'push' && 'dev' || github.event.inputs.environment }}/${{ vars.COMPONENT_NAME }}
  NODE_ENV: ${{ github.event_name == 'push' && 'dev' || github.event.inputs.environment }}

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (dev)"
        type: choice
        options:
          - dev
        required: true

jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ contains('["haazaa"]', github.actor) || github.event_name == 'push' || github.event.inputs.environment == 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install deps and build project
        run: |
          yarn install
          yarn build

      - name: Transfer files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets[format('{0}_SERVER', env.NODE_ENV)] }}
          username: ${{ secrets[format('{0}_USER', env.NODE_ENV)] }}
          key: ${{ secrets[format('{0}_KEY', env.NODE_ENV)] }}
          rm: true
          source: ".next,public,package.json,yarn.lock"
          target: ${{ env.RELEASE_PATH }}

      - name: Deploy and restart
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets[format('{0}_SERVER', env.NODE_ENV)] }}
          username: ${{ secrets[format('{0}_USER', env.NODE_ENV)] }}
          key: ${{ secrets[format('{0}_KEY', env.NODE_ENV)] }}
          script: |
            cd ${{ env.RELEASE_PATH }}
            yarn install --production
            echo '${{ secrets[format('{0}_NGINX', env.NODE_ENV)] }}' > ${{ env.RELEASE_PATH }}/nginx.conf
            sudo cp ${{ env.RELEASE_PATH }}/nginx.conf /etc/nginx/sites-available/${{ env.APP_NAME }}-${{ env.COMPONENT_NAME }}
            sudo ln -sf /etc/nginx/sites-available/${{ env.APP_NAME }}-${{ env.COMPONENT_NAME }} /etc/nginx/sites-enabled/
            sudo systemctl restart nginx
            pm2 restart ${{ env.APP_NAME }}-${{ env.COMPONENT_NAME }} || pm2 start yarn --name "${{ env.APP_NAME }}-${{ env.COMPONENT_NAME }}" -- start
